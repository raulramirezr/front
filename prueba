<!DOCTYPE html>
<html>
	<head>
		<title>Panel Control</title>
		<meta name="viewport" content="width=devide-width, user-scalable=no, initial-scale=1.0,maximun-1.0, minimum-scale=1.0">
		<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"/>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"/>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css"/>
		<link rel="stylesheet" type="text/css" href="css/estilos.css">
		<link rel="icon" type="text/css" href="favicon.png">
		<script src="https://kit.fontawesome.com/2cf95b49bf.js" crossorigin="anonymous"></script>
	</head> 
	<body>
	
		<div class="icon" >  
 
		<h2 style="color: #4882B2;" >  <i class="fas fa-house-user fa-4x"></i> </h2>
		<h1 > Panel de Control </h1></br>

		</div>
		<div class="container">
			<div class="botoness">
				<div  class="boton1 ">
				<i class="far fa-lightbulb fa-2x"></i>
							<a id="control1" data-id=1 href="#" class="toggler btn btn-success"> 
							<i class="fas fa-power-off fa-3x" ></i>			
							</a>			
				</div>
				<div class="boton2">
				<i class="far fa-lightbulb fa-2x"></i>
							<a id="control2" data-id=2 href="#" class="toggler btn btn-success"> 
							<i class="fas fa-power-off fa-3x" ></i>
							</a>
				</div>				
				<div class="boton3">
				<i class="far fa-bell fa-2x"></i>
							<a id="control3" data-id=3 href="#" class="toggler btn btn-success"> 
							<i class="fas fa-power-off fa-3x" ></i>
							</a>
				</div>
				<div class="boton4">
				<i class="far fa-bell fa-2x" ></i>
							<a id="control4" data-id=4 href="#" class="toggler btn btn-success"> 
							<i class="fas fa-power-off fa-3x" ></i>
							</a>
				</div></br> 
			</div></br></br></br>
				<div class="tiempo">
					<p href=""><span id="time"> 000000 </span>
				</div>
		</div></br></br>

		<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
		<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment-with-locales.min.js" type="text/javascript"></script>
		<script src="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>
		<script>
			$(document).ready(function() {
				//Ajax para obtener valores actuales de los pines de activacion/desactivacion
				$.ajax({
					url: 'control_status.php',
					type: 'GET',
				})
				.done(function(resp) {
					let lines = resp.split("\n");
					for (let i = 0; i < lines.length - 1; i++){
						if ( lines[i].slice(1) == 'Off'){
							$('#control'+ lines[i][0]).removeClass('btn-success');
							$('#control'+ lines[i][0]).addClass('btn-danger');
							$("a").html('<i class="fas fa-power-off fa-3x">  </i>');
						//	$('#control'+ lines[i][0]).text('Control '+ lines[i][0] +' OFF').html('<i class="fas fa-power-off fa-5x">  </i>');
						} else if ( lines[i].slice(1) == 'On' ) {
							$('#control'+ lines[i][0]).removeClass('btn-danger');
							$('#control'+ lines[i][0]).addClass('btn-success');
							$("a").html('<i class="fas fa-power-off fa-3x">  </i>');
							 
						   // $('#control'+ lines[i][0]).text('Control '+ lines[i][0] +' ON')
						}
					}
				});
				


				$('a.toggler').click(function(event) {
					var id = $(this).attr('data-id');
					if ( $(this).hasClass('btn-danger')){
						$(this).removeClass('btn-danger');
						$(this).addClass('btn-success');
						//$(this).text('Control '+ id +' ON'  );
						alertify.alert("Control apagado");
					} else if ($(this).hasClass('btn-success')){
						$(this).removeClass('btn-success');
						$(this).addClass('btn-danger');
						//$(this).text('Control '+ id +' OFF');
						alertify.alert("Control encendido");
						
					}
					$.ajax({
						url: 'toggle_control.php',
						type: 'POST',
						data: {"id": id},
					})
					.done(function(resp) {
						console.log(resp);
						
					})
				});
			

				let updateSensorValues = () => {
					$.ajax({
						url: 'get_sensor_values.php',
						type: 'GET'
					})
					.done(function(response) {
						let resp = JSON.parse(response);
						let sensorsNum = 3;
						let sensorsInfo = new Array(sensorsNum);
						for (let i = 0; i < sensorsNum; i++){
							sensorsInfo[i] = new Array();
						}
						for (let i = 0; i < resp.length; i++){
							sensorsInfo[resp[i].sensor_id - 1].push(resp[i]);
						}
						let lastReading = new Array(3);
						for (let i = 0; i < sensorsNum;i++){
							lastReading[i] = sensorsInfo[i].slice(-1)[0];
						}
						let time = moment(new Date(lastReading[0].time)).format('DD/MM/YYYY hh:mm:ss ');
						$('#humidity_1').text(lastReading[0].humidity);
						$('#humidity_2').text(lastReading[1].humidity);
						$('#humidity_3').text(lastReading[2].humidity);
						$('#temperature_1').text(lastReading[0].temperature);
						$('#temperature_2').text(lastReading[1].temperature);
						$('#temperature_3').text(lastReading[2].temperature);
						$('#distance_1').text(lastReading[0].distance); /*Distancia*/
						$('#distance_2').text(lastReading[1].distance); /*Distancia*/
						$('#distance_3').text(lastReading[2].distance); /*Distancia*/
						$('#time').text(time);
						var CSV = 'Fecha,Hora,Temperatura1,Humedad1,Distancia1,Temperatura2,Humedad2,Distancia2,Temperatura3,Humedad3,Distancia3\r\n';
						for (let i = 0; i < sensorsInfo[0].length; i++){
							CSV += moment(new Date(sensorsInfo[0][i].time)).format('DD/MM/YYYY,');
							CSV += moment(new Date(sensorsInfo[0][i].time)).format('hh:mm:ss,');
							for (let j = 0; j < sensorsNum; j++){
								CSV += sensorsInfo[j][i].temperature + ',';
								CSV += sensorsInfo[j][i].humidity + ',';
								CSV += j == sensorsNum - 1 ? sensorsInfo[j][i].distance + '\r\n' : sensorsInfo[j][i].distance + ',';
							}
						}
						var data = new Blob([CSV], {type: 'text/csv'});
						var url = window.URL.createObjectURL(data);
						$('#download_link').attr('href', url);
					})
					.fail(function(response) {
						console.log(response);
					})
					.always(function(response) {
					});
				}
				updateSensorValues();
				setInterval(updateSensorValues, 10000);  
			});
		</script>
	</body>
</html>
